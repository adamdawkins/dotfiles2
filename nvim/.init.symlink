require('packer').startup(function(use)
  use 'easymotion/vim-easymotion'        -- Easy motion
  use 'hrsh7th/cmp-nvim-lsp'             -- LSP source for nvim-cmp
  use 'hrsh7th/nvim-cmp'                 -- Autocompletion plugin
  use 'jbyuki/venn.nvim'                 -- Draw ASCII diagrams in Neovim
  use 'kyazdani42/nvim-tree.lua'         -- File explorer
  use 'lewis6991/gitsigns.nvim'          -- Git signs in the gutter
  use 'lukas-reineke/indent-blankline.nvim' -- Display indents
  use 'neovim/nvim-lspconfig'            -- Built-in LSP support
  use 'nvim-lua/plenary.nvim'            -- Required by Telescope
  use 'nvim-lualine/lualine.nvim'        -- Statusline
  use 'nvim-telescope/telescope.nvim'    -- Fuzzy finder replacement for CtrlP
  use 'nvim-treesitter/nvim-treesitter'  -- Modern syntax highlighting
  use 'nvimtools/hydra.nvim'             -- A better way to manage keymaps
  use 'romainl/vim-cool' 
  use 'sotte/presenting.nvim'            -- Presentation mode
  use 'tpope/vim-abolish'                -- Intelligent search and replace
  use 'tpope/vim-commentary'             -- Comments
  use 'tpope/vim-fugitive'               -- Git integration
  use 'tpope/vim-projectionist'          -- Project-specific settings
  use 'tpope/vim-sensible'               -- Good Vim defaults
  use 'tpope/vim-surround'               -- Essential text objects
  use 'tpope/vim-unimpaired'             -- Pairs of handy bracket mappings
  use 'wbthomason/packer.nvim'           -- Packer manages itself

--  Themes
use 'Mofiqul/dracula.nvim'
  use 'folke/tokyonight.nvim'                  -- Tokyo night theme.
  use { "catppuccin/nvim", as = "catppuccin" } --  Catppuccin theme
end)


-- # THE BASICS
vim.opt.number = true
vim.opt.shiftwidth = 2
vim.opt.tabstop = 2
vim.opt.expandtab = true
vim.opt.ignorecase = true  -- enables case-insensitive search
vim.opt.smartcase = true   -- makes search case-sensitive if uppercase letters are used

-- Map leader and command
vim.g.mapleader = ','
vim.api.nvim_set_keymap('n', '<Space>', ':', { noremap = true, silent = false })

-- shortcut the pane switching
vim.api.nvim_set_keymap('n', '<C-l>', '<C-w><C-l>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<C-h>', '<C-w><C-h>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<C-j>', '<C-w><C-j>', { noremap = true, silent = true })
vim.api.nvim_set_keymap('n', '<C-k>', '<C-w><C-k>', { noremap = true, silent = true })

-- # TELESCOPE
require('telescope').setup({
  defaults = {
    file_ignore_patterns = { "app/assets/.*", "spec/fixtures/vcr_cassettes/.*" },
  },
})
-- Telescope recommended aliases
local builtin = require('telescope.builtin')
vim.keymap.set('n', '<leader>ff', builtin.find_files, { desc = 'Telescope find files' })
vim.keymap.set('n', '<leader>fg', builtin.live_grep, { desc = 'Telescope live grep' })
vim.keymap.set('n', '<leader>fb', builtin.buffers, { desc = 'Telescope buffers' })
vim.keymap.set('n', '<leader>fh', builtin.help_tags, { desc = 'Telescope help tags' })

-- Plus my old b and p for muscle memory
vim.keymap.set('n', '<leader>p', builtin.find_files, { desc = 'Telescope find files' })
vim.keymap.set('n', '<leader>b', builtin.buffers, { desc = 'Telescope buffers' })

-- # KEY MAPPINGS
-- Open ~/.config/nvim/init.lua
vim.keymap.set('n', '<leader>vi', ':e ~/.config/nvim/init.lua<cr>')

-- # TREESITTER
require('nvim-treesitter.configs').setup {
    ensure_installed = { "ruby" },  -- Add other languages as needed
    highlight = {
        enable = true,              -- Enable Treesitter highlighting
        additional_vim_regex_highlighting = false,
    },
}

-- # GIT 
-- ## GIT SIGNS
require('gitsigns').setup {
    current_line_blame = true,  -- Enable inline blame
    current_line_blame_opts = {
        virt_text = true,
        virt_text_pos = 'eol',   -- 'eol' or 'overlay'; place at end of line
        delay = 2000,             -- Delay before blame info appears
    },
    current_line_blame_formatter = '<author>, <author_time:%Y-%m-%d> - <summary>',
}

-- # STATUS LINE
require('lualine').setup {
  options = {
    theme = 'dracula',
    section_separators = {'', ''},
    component_separators = {'', ''},
  },
}
vim.api.nvim_set_keymap('n', '<leader>gb', ':Gitsigns toggle_current_line_blame<CR>', { noremap = true, silent = true })

-- Define a default database
vim.g.psql_db = "victory_development"

-- Function to run psql command
function Sql()
  -- Get the current file
  local filename = vim.fn.expand('%')
  -- Get the database, defaulting to `psql_db` global variable
  local db = vim.g.psql_db or "victory_development"
  -- Construct the command
  local cmd = "psql -d " .. db .. " -f " .. filename
  -- Run the command
  vim.cmd("!" .. cmd)
end

-- Set up a command to run this function
vim.api.nvim_create_user_command('Sql', Sql, {})

-- Key mapping to quickly run the command
vim.api.nvim_set_keymap('n', '<leader>s', ':Sql<CR>', { noremap = true, silent = true })


-- Presenting mode
require('presenting').setup({})


-- Venn
-- venn.nvim: enable or disable keymappings
function _G.Toggle_venn()
  local venn_enabled = vim.inspect(vim.b.venn_enabled)
  if venn_enabled == "nil" then
    vim.b.venn_enabled = true
    vim.cmd[[setlocal ve=all]]
    -- draw a line on HJKL keystokes
    vim.api.nvim_buf_set_keymap(0, "n", "J", "<C-v>j:VBox<CR>", {noremap = true})
    vim.api.nvim_buf_set_keymap(0, "n", "K", "<C-v>k:VBox<CR>", {noremap = true})
    vim.api.nvim_buf_set_keymap(0, "n", "L", "<C-v>l:VBox<CR>", {noremap = true})
    vim.api.nvim_buf_set_keymap(0, "n", "H", "<C-v>h:VBox<CR>", {noremap = true})
    -- draw a box by pressing "f" with visual selection
    vim.api.nvim_buf_set_keymap(0, "v", "f", ":VBox<CR>", {noremap = true})
  else
    vim.cmd[[setlocal ve=]]
    vim.api.nvim_buf_del_keymap(0, "n", "J")
    vim.api.nvim_buf_del_keymap(0, "n", "K")
    vim.api.nvim_buf_del_keymap(0, "n", "L")
    vim.api.nvim_buf_del_keymap(0, "n", "H")
    vim.api.nvim_buf_del_keymap(0, "v", "f")
    vim.b.venn_enabled = nil
  end
end
-- toggle keymappings for venn using <leader>v
vim.api.nvim_set_keymap('n', '<leader>v', ":lua Toggle_venn()<CR>", { noremap = true})


-- # VISUALS

vim.cmd([[
  function! Fifo(cmd)
    silent! execute '!echo "clear; cd ' . getcwd() . ' && ' . a:cmd . '" > /tmp/cmds'
    redraw!
  endfunction
]])
-- Set the colorscheme
vim.cmd [[colorscheme tokyonight]]
-- Set a color column at column 80
vim.o.colorcolumn = "120"
